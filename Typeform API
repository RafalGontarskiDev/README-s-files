## 1. Overview

The **Typeform API Plugin** allows integration with Typeform, enabling users to manage workspaces, forms, and themes. This plugin supports retrieving, creating, and updating workspaces, forms, and themes using **Bearer Personal Access Token** authentication. The API provides robust methods to manage your Typeform data and streamline form workflows.

## 2. Configuration

Sign in [Typeform](https://www.typeform.com/developers/).

Go to setting.

![Settings]()

On left side navigator choose Personal Tokens.

![Tokens]()

Here You can generate Your Personal Access Token. Remember about copy that in save place.

![generating token]()

Now You can install Typeform Plugin in NoCode-X hub and create data with token:

![creating data]()

Your data should look like:

![data]()

Now You can use Typeform API in Your application logic. Have fun!

## 3. Available Mathod's

### 1. **Typeform: Retrieve Workspaces**

- **Description:** This action calls the API [Retrieve Workspaces](https://developer.typeform.com/) to fetch a list of all workspaces in your Typeform account.

#### How to Use

1. **Prepare action in Your logic:**  
   Design the logic to include Bearer Token authentication using your `PERSONAL_ACCESS_TOKEN`.

**Logic Example:**  
![LOGIC]()

2. **Result:**  
   The **RESPONSE** will contain a list of all available workspaces with their details.

#### Expected Response

- Returns a list of workspaces, including their names, IDs, and associated information.

**Response Example:**  
![RESPONSE]()

---

### 2. **Typeform: Retrieve Workspace**

- **Description:** This action calls the API [Retrieve Workspace](https://developer.typeform.com/) to fetch information about a specific workspace using its `workspaceId`.

#### How to Use

1. **Prepare action in Your logic:**  
   Provide the `workspaceId` to identify the specific workspace.

**Logic Example:**  
![LOGIC]()

2. **Result:**  
   The **RESPONSE** will contain the details of the specified workspace, such as its name, members, and settings.

#### Expected Response

- Returns detailed information about the specified workspace.

**Response Example:**  
![RESPONSE]()

---

### 3. **Typeform: Retrieve Account Workspaces**

- **Description:** This action calls the API [Retrieve Account Workspaces](https://developer.typeform.com/) to fetch all workspaces associated with a specific Typeform account.

#### How to Use

1. **Prepare action in Your logic:**  
   Include the `accountId` to fetch all related workspaces.

**Logic Example:**  
![LOGIC]()

2. **Result:**  
   The **RESPONSE** will contain a list of workspaces tied to the account.

#### Expected Response

- Returns a list of workspaces associated with the specified account.

**Response Example:**  
![RESPONSE]()

---

### 4. **Typeform: Create Account Workspace**

- **Description:** This action calls the API [Create Account Workspace](https://developer.typeform.com/) to create a new workspace under a specific Typeform account.

#### How to Use

1. **Prepare action in Your logic:**  
   Include the `account_id` and workspace details in the request body.

**Logic Example:**  
![LOGIC]()

2. **Result:**  
   The **RESPONSE** will confirm the creation of the workspace and return its details.

#### Expected Response

- Returns the details of the newly created workspace.

**Response Example:**  
![RESPONSE]()

---

### 5. **Typeform: Create Workspace**

- **Description:** This action calls the API [Create Workspace](https://developer.typeform.com/) to create a new workspace for organizing forms and resources.

#### How to Use

1. **Prepare action in Your logic:**  
   Include the workspace name in the request body.

**Logic Example:**  
![LOGIC]()

2. **Result:**  
   The **RESPONSE** will confirm the creation of the workspace and return its details.

#### Expected Response

- Returns the details of the newly created workspace.

**Response Example:**  
![RESPONSE]()

---

### 6. **Typeform: Create Theme**

- **Description:** This action calls the API [Create Theme](https://developer.typeform.com/) to define a custom theme for forms, including colors, fonts, and styles.

#### How to Use

1. **Prepare action in Your logic:**  
   Include theme details like name, colors, and styles in the request body.

**Logic Example:**  
![LOGIC]()

2. **Result:**  
   The **RESPONSE** will confirm the creation of the theme and return its details.

#### Expected Response

- Returns the details of the newly created theme.

**Response Example:**  
![RESPONSE]()

---

### 7. **Typeform: Create Form**

- **Description:** This action calls the API [Create Form](https://developer.typeform.com/) to programmatically create new forms in Typeform.

#### How to Use

1. **Prepare action in Your logic:**  
   Include the form title, fields, and layout in the request body.

**Logic Example:**  
![LOGIC]()

2. **Result:**  
   The **RESPONSE** will confirm the creation of the form and return its ID and details.

#### Expected Response

- Returns the details of the newly created form.

**Response Example:**  
![RESPONSE]()

---

### 8. **Typeform: Update Workspace**

- **Description:** This action calls the API [Update Workspace](https://developer.typeform.com/) to modify the details of an existing workspace.

#### How to Use

1. **Prepare action in Your logic:**  
   Provide the `workspaceId` and include the fields to update in the request body.

**Logic Example:**  
![LOGIC]()

2. **Result:**  
   The **RESPONSE** will confirm the update and return the updated workspace details.

#### Expected Response

- Returns the updated workspace information.

**Response Example:**  
![RESPONSE]()



## 4. Links to Documentation

- [Typeform API Documentation](https://developer.typeform.com/)
- [Typeform API Access Setup](https://www.typeform.com/help/a/where-can-i-find-my-api-key-360029581691/)
