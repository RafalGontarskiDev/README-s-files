# ScrapingBee API Plugin Documentation

## 1. Overview

The **ScrapingBee API Plugin** enables web scraping and data extraction with features like capturing AJAX content, performing Google searches, and taking screenshots of web pages. The API requires an **API key** passed as a query parameter to authenticate requests. ScrapingBee simplifies web scraping by handling dynamic content such as JavaScript, cookies, and AJAX.

## 2. Available Methods

### 1. **Scrape a Simple URL**
   - **Endpoint**: `GET https://app.scrapingbee.com/api/v1/?api_key={{APIKey}}&url={{url}}`
   - **What it does**: Scrapes the content of a given URL.
   - **Configuration**:
     - Requires `APIKey`, the authentication key.
     - Requires `url`, the target URL to be scraped.
   - **Use case**: Use this method to scrape the raw HTML content of a web page.

#### Example Request:
```http
GET https://app.scrapingbee.com/api/v1/?api_key=your_api_key&url=https://example.com
```

### 2. **Google Search**
   - **Endpoint**: `GET https://app.scrapingbee.com/api/v1/store/google?api_key={{APIKey}}&search={{search}}`
   - **What it does**: Performs a Google search and returns the search result page content.
   - **Configuration**:
     - Requires `APIKey` for authentication.
     - Requires `search`, the query to be searched on Google.
   - **Use case**: Use this method to scrape Google search results for a given query.

#### Example Request:
```http
GET https://app.scrapingbee.com/api/v1/store/google?api_key=your_api_key&search=web+scraping
```

### 3. **Capture Cookies / XHR / AJAX Content**
   - **Endpoint**: `GET https://app.scrapingbee.com/api/v1/?api_key={{APIKey}}&url={{url}}&json_response=true`
   - **What it does**: Scrapes the given URL and returns AJAX or XHR content, capturing cookies and JSON responses.
   - **Configuration**:
     - Requires `APIKey` for authentication.
     - Requires `url`, the URL to be scraped.
     - Set `json_response=true` to capture AJAX content.
   - **Use case**: Use this method to scrape web pages with dynamic content generated by JavaScript and AJAX.

#### Example Request:
```http
GET https://app.scrapingbee.com/api/v1/?api_key=your_api_key&url=https://example.com&json_response=true
```

### 4. **Take a Screenshot + Get the HTML**
   - **Endpoint**: `GET https://app.scrapingbee.com/api/v1/?api_key={{APIKey}}&url={{url}}&screenshot_full_page=true&json_response=true`
   - **What it does**: Takes a screenshot of the full page and returns the HTML content of the page.
   - **Configuration**:
     - Requires `APIKey` for authentication.
     - Requires `url`, the URL to take the screenshot of.
     - Set `screenshot_full_page=true` for full-page screenshot.
     - Set `json_response=true` to return HTML content along with the screenshot.
   - **Use case**: Use this method to capture both the full-page screenshot and the HTML of the web page for complete analysis.

#### Example Request:
```http
GET https://app.scrapingbee.com/api/v1/?api_key=your_api_key&url=https://example.com&screenshot_full_page=true&json_response=true
```

### 5. **Take a Full-Page Screenshot**
   - **Endpoint**: `GET https://app.scrapingbee.com/api/v1/?api_key={{APIKey}}&url={{url}}&screenshot_full_page=true`
   - **What it does**: Takes a full-page screenshot of the given URL.
   - **Configuration**:
     - Requires `APIKey` for authentication.
     - Requires `url`, the target URL to capture a full-page screenshot.
   - **Use case**: Use this method to get a visual representation of the entire page, useful for visual documentation or analysis.

#### Example Request:
```http
GET https://app.scrapingbee.com/api/v1/?api_key=your_api_key&url=https://example.com&screenshot_full_page=true
```

### 6. **Scroll Vertically**
   - **Endpoint**: `GET https://app.scrapingbee.com/api/v1/?api_key={{APIKey}}&url={{url}}&js_scenario={{JsScenario}}`
   - **What it does**: Simulates vertical scrolling on a web page before capturing content.
   - **Configuration**:
     - Requires `APIKey` for authentication.
     - Requires `url`, the URL of the page.
     - Requires `JsScenario`, which defines the scrolling behavior.
   - **Use case**: Use this method for websites where content loads dynamically upon scrolling (infinite scroll).

#### Example Request:
```http
GET https://app.scrapingbee.com/api/v1/?api_key=your_api_key&url=https://example.com&js_scenario={"action":"scroll", "distance":500}
```

### 7. **Take a Screenshot**
   - **Endpoint**: `GET https://app.scrapingbee.com/api/v1/?api_key={{APIKey}}&url={{url}}&screenshot=true`
   - **What it does**: Takes a screenshot of the given URL (viewport only).
   - **Configuration**:
     - Requires `APIKey` for authentication.
     - Requires `url`, the URL of the page.
     - Set `screenshot=true` to capture a viewport screenshot.
   - **Use case**: Use this method to capture a basic screenshot of the page as seen on the screen.

#### Example Request:
```http
GET https://app.scrapingbee.com/api/v1/?api_key=your_api_key&url=https://example.com&screenshot=true
```

## 3. Configuration

To use the ScrapingBee API, you need an **API Key**. The API Key is passed as a query parameter in every API request.

### 1. **API Key Setup**
   - You can obtain an API key by signing up for an account on ScrapingBee.
   - The API key is included in the request URL as a query parameter (`api_key={{APIKey}}`).

### 2. **JSON Configuration Example**

```json
{
  "APIKey": "your_scrapingbee_api_key"
}
```

This configuration allows you to authenticate and use the various ScrapingBee API methods for scraping and web automation tasks.

## 4. Links to Documentation

- [ScrapingBee API Documentation](https://www.scrapingbee.com/documentation/)
- [ScrapingBee API Key Setup](https://www.scrapingbee.com/documentation/#quickstart)

This documentation provides a comprehensive guide to interacting with the ScrapingBee API, enabling web scraping, content capture, and screenshots with secure API key authentication.
